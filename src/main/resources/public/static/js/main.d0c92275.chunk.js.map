{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","match","teamName","isMatchWon","matchWinner","otherTeam","team1","team2","otherTeamRoute","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","idx","YearSelector","years","i","push","year","MatchPage","renderMatches","setMatches","length","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0c92275.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MatchDetailCard.scss';\r\n\r\nexport const MatchDetailCard = ({ match, teamName }) => {\r\n\r\n  if(!match) return null;\r\n\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n\r\n  return (\r\n    <div className={isMatchWon ? \"MatchDetailCard won-card\" : \"MatchDetailCard lost-card\"}>\r\n      <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link>\r\n        </h1>\r\n        <h2 className=\"match-date\">{match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n      </div>\r\n      <div className=\"additional-detail\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of Match</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1}, {match.umpire2}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./MatchSmallCard.scss\";\r\n\r\nexport const MatchSmallCard = ({ match, teamName }) => {\r\n\r\n  if (!match) return null;\r\n\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n\r\n  return (\r\n    <div className={isMatchWon ? \"MatchSmallCard won-card\" : \"MatchSmallCard lost-card\"}>\r\n      <span className=\"vs\">vs</span>\r\n      <h1><Link to={otherTeamRoute}>{otherTeam}</Link>\r\n      </h1>\r\n      <p>{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n    </div>\r\n  )\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport { Link } from 'react-router-dom';\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\r\n  const [team, setTeam] = useState({ matches: [] });\r\n  const { teamName } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchMatches = async () => {\r\n      const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n      const data = await response.json();\r\n      setTeam(data);\r\n    };\r\n    fetchMatches();\r\n  }, [teamName]);\r\n\r\n  if(!team || !team.teamName)\r\n    return <h1>Team not found.</h1>\r\n\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\">\r\n        <h1 className=\"team-name\">{team.teamName}</h1>\r\n      </div>\r\n      <div className=\"win-loss-section\">\r\n        Win / Losses\r\n        <PieChart\r\n          data={[\r\n            { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n            { title: 'Wins', value: team.totalWins, color: '#4da375' }\r\n          ]}\r\n        />\r\n      </div>\r\n      <div className=\"match-detail-section\">\r\n        <h3>Latest Matches</h3>\r\n        <MatchDetailCard match={team.matches[0]} teamName={team.teamName} />\r\n      </div>\r\n      {team.matches.slice(1).map((match, idx) => \r\n        <MatchSmallCard key={idx} match={match} teamName={team.teamName} />\r\n      )}\r\n      <div className=\"more-link\">\r\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More {\">\"}</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({ teamName }) => {\r\n\r\n  let years = [];\r\n  const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n  const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n  for (let i = startYear; i <= endYear; i++) {\r\n    years.push(i);\r\n  }\r\n\r\n  return (\r\n    <ol className=\"YearSelector\">\r\n      {years.map((year, idx) => (\r\n        <li key={idx}>\r\n          <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  )\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\nimport { Link } from 'react-router-dom';\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n  const [matches, setMatches] = useState([]);\r\n  const { teamName, year } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchMatches = async () => {\r\n      const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n      const data = await response.json();\r\n      setMatches(data);\r\n    };\r\n    fetchMatches();\r\n  }, [teamName, year]);\r\n\r\n  let renderMatches;\r\n\r\n  if(matches === null || matches.length === 0) {\r\n    renderMatches = <h3>Team has no match.</h3>\r\n  } else {\r\n    renderMatches = matches.map((match, idx) => (\r\n      <MatchDetailCard key={idx} match={match} teamName={teamName} />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"MatchPage\">\r\n      <div className=\"year-selector\">\r\n        <h3>Select Year</h3>\r\n        <YearSelector teamName={teamName} />\r\n      </div>\r\n      <div>\r\n        <div className=\"heading\">\r\n          <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n          <h4><Link to=\"/\">{`<`} All Teams</Link></h4>\r\n        </div>\r\n        {renderMatches}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({ teamName }) => {\r\n  return (\r\n    <div className=\"TeamTile\">\r\n      <h1>\r\n        <Link to={`/teams/${teamName}`}>{teamName}</Link>\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TeamTile } from '../components/TeamTile';\r\nimport './HomePage.scss';\r\n\r\nexport const HomePage = () => {\r\n\r\n  const [teams, setTeams] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAllTeams = async () => {\r\n      const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams`);\r\n      const data = await response.json();\r\n      setTeams(data);\r\n    };\r\n    fetchAllTeams();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className=\"header\">\r\n        <h1 className=\"app-name\">IPL Dashboard</h1>\r\n      </div>\r\n      <div className=\"team-grid\">\r\n        {teams.map((team, idx) => <TeamTile key={idx} teamName={team.teamName} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import './App.scss';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { TeamPage } from \"./pages/TeamPage\";\nimport { MatchPage } from \"./pages/MatchPage\";\nimport { HomePage } from \"./pages/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\" >\n            <MatchPage/>\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}